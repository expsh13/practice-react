{"ast":null,"code":"var _jsxFileName = \"/Users/hatasatoki/practice-react/todo-app/src/components/Todo.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getKey = () => Math.random().toString(32).substring(2);\n\nconst [items, setItems] = React.useState([{\n  key: getKey(),\n  text: 'Learn JavaScript',\n  done: false\n}, {\n  key: getKey(),\n  text: 'Learn React',\n  done: false\n}, {\n  key: getKey(),\n  text: 'Get some good sleep',\n  done: false\n}]);\nexport function Todo() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-heading\",\n      children: \"\\u269B\\uFE0F React ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), items.map(item => /*#__PURE__*/_jsxDEV(TodoItem, {\n      item: item\n    }, item.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-block\",\n      children: [items.length, \" items\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = Todo;\n\nfunction TodoItem(_ref) {\n  let {\n    item\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"panel-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), item.text]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = TodoItem;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Todo\");\n$RefreshReg$(_c2, \"TodoItem\");","map":{"version":3,"names":["React","getKey","Math","random","toString","substring","items","setItems","useState","key","text","done","Todo","map","item","length","TodoItem"],"sources":["/Users/hatasatoki/practice-react/todo-app/src/components/Todo.tsx"],"sourcesContent":["import React from 'react';\n\nconst getKey = (): string => Math.random().toString(32).substring(2);\n\nconst [items, setItems] = React.useState([\n  { key: getKey(), text: 'Learn JavaScript', done: false },\n  { key: getKey(), text: 'Learn React', done: false },\n  { key: getKey(), text: 'Get some good sleep', done: false },\n]);\n\nexport function Todo() {\n\n  return (\n    <div className=\"panel\">\n      <div className=\"panel-heading\">\n        ⚛️ React ToDo\n      </div>\n      {items.map(item => (\n        <TodoItem key={item.key} item={item} />\n      ))}\n      <div className=\"panel-block\">\n        {items.length} items\n      </div>\n    </div>\n  );\n\n}\n\n\nfunction TodoItem({ item }) {\n  return (\n    <label className=\"panel-block\">\n      <input type=\"checkbox\" />\n      {item.text}\n    </label>\n  );\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAM,GAAG,MAAcC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,CAA7B;;AAEA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACQ,QAAN,CAAe,CACvC;EAAEC,GAAG,EAAER,MAAM,EAAb;EAAiBS,IAAI,EAAE,kBAAvB;EAA2CC,IAAI,EAAE;AAAjD,CADuC,EAEvC;EAAEF,GAAG,EAAER,MAAM,EAAb;EAAiBS,IAAI,EAAE,aAAvB;EAAsCC,IAAI,EAAE;AAA5C,CAFuC,EAGvC;EAAEF,GAAG,EAAER,MAAM,EAAb;EAAiBS,IAAI,EAAE,qBAAvB;EAA8CC,IAAI,EAAE;AAApD,CAHuC,CAAf,CAA1B;AAMA,OAAO,SAASC,IAAT,GAAgB;EAErB,oBACE;IAAK,SAAS,EAAC,OAAf;IAAA,wBACE;MAAK,SAAS,EAAC,eAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAIGN,KAAK,CAACO,GAAN,CAAUC,IAAI,iBACb,QAAC,QAAD;MAAyB,IAAI,EAAEA;IAA/B,GAAeA,IAAI,CAACL,GAApB;MAAA;MAAA;MAAA;IAAA,QADD,CAJH,eAOE;MAAK,SAAS,EAAC,aAAf;MAAA,WACGH,KAAK,CAACS,MADT;IAAA;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;KAhBeH,I;;AAmBhB,SAASI,QAAT,OAA4B;EAAA,IAAV;IAAEF;EAAF,CAAU;EAC1B,oBACE;IAAO,SAAS,EAAC,aAAjB;IAAA,wBACE;MAAO,IAAI,EAAC;IAAZ;MAAA;MAAA;MAAA;IAAA,QADF,EAEGA,IAAI,CAACJ,IAFR;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;MAPQM,Q"},"metadata":{},"sourceType":"module"}