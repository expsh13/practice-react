{"ast":null,"code":"// typeを使うときは下記のように定義\n// type Item = {\n//   key: string,\n//   text: string, \n//   done: boolean\n// }\nconst getKey = () => Math.random().toString(32).substring(2); // const items: Item[] = [ \n//   { key: getKey(), text: 'Learn JavaScript', done: false },\n//   { key: getKey(), text: 'Learn React', done: false },\n//   { key: getKey(), text: 'Get some good sleep', done: false }\n// ]\n// export function TodoItem() {\n//   return (\n//     {items.map((item: any) => (\n//       <div>\n//         <label className=\"panel-block\">\n//           <input type=\"checkbox\" />\n//           {item.text}\n//         </label>\n//         <div className=\"panel-block\">\n//           {items.length} items\n//         </div>\n//       </div>\n//     ))}\n//   );\n// }\n\n\n//”Array[]” or ”Array<Array>”とすることで配列の中にオブジェクトが入っている状態を表現することができます。\nconst items = [{\n  key: getKey(),\n  text: 'Learn JavaScript',\n  done: false\n}, {\n  key: getKey(),\n  text: 'Learn React',\n  done: false\n}, {\n  key: getKey(),\n  text: 'Get some good sleep',\n  done: false\n}];","map":{"version":3,"names":["getKey","Math","random","toString","substring","items","key","text","done"],"sources":["/Users/hatasatoki/practice-react/todo-app/src/components/TodoItem.tsx"],"sourcesContent":["\n// typeを使うときは下記のように定義\n// type Item = {\n//   key: string,\n//   text: string, \n//   done: boolean\n// }\n\n\nconst getKey = (): string => Math.random().toString(32).substring(2);\n\n// const items: Item[] = [ \n//   { key: getKey(), text: 'Learn JavaScript', done: false },\n//   { key: getKey(), text: 'Learn React', done: false },\n//   { key: getKey(), text: 'Get some good sleep', done: false }\n// ]\n\n\n// export function TodoItem() {\n//   return (\n//     {items.map((item: any) => (\n//       <div>\n//         <label className=\"panel-block\">\n//           <input type=\"checkbox\" />\n//           {item.text}\n//         </label>\n//         <div className=\"panel-block\">\n//           {items.length} items\n//         </div>\n//       </div>\n//     ))}\n//   );\n// }\n\n\ninterface  Item {\n  key: string,\n  text: string,\n  done: boolean\n}\n\n//”Array[]” or ”Array<Array>”とすることで配列の中にオブジェクトが入っている状態を表現することができます。\n\nconst items: Item[] = [ \n  { key: getKey(), text: 'Learn JavaScript', done: false },\n  { key: getKey(), text: 'Learn React', done: false },\n  { key: getKey(), text: 'Get some good sleep', done: false }\n]"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AAGA,MAAMA,MAAM,GAAG,MAAcC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,CAA7B,C,CAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AASA;AAEA,MAAMC,KAAa,GAAG,CACpB;EAAEC,GAAG,EAAEN,MAAM,EAAb;EAAiBO,IAAI,EAAE,kBAAvB;EAA2CC,IAAI,EAAE;AAAjD,CADoB,EAEpB;EAAEF,GAAG,EAAEN,MAAM,EAAb;EAAiBO,IAAI,EAAE,aAAvB;EAAsCC,IAAI,EAAE;AAA5C,CAFoB,EAGpB;EAAEF,GAAG,EAAEN,MAAM,EAAb;EAAiBO,IAAI,EAAE,qBAAvB;EAA8CC,IAAI,EAAE;AAApD,CAHoB,CAAtB"},"metadata":{},"sourceType":"module"}